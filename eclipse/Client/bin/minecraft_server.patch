diff -r -U 3 minecraft_server\net\minecraft\server\MinecraftServer.java minecraft_server_patched\net\minecraft\server\MinecraftServer.java
--- minecraft_server\net\minecraft\server\MinecraftServer.java	Tue May 31 23:28:47 2011
+++ minecraft_server_patched\net\minecraft\server\MinecraftServer.java	Tue May 31 23:46:39 2011
@@ -246,122 +246,73 @@
         field_6025_n = false;
     }
 
-    public void run()
-    {
-        try
-        {
-            if(func_6008_d())
-            {
-                long l = System.currentTimeMillis();
-                long l1 = 0L;
-                while(field_6025_n) 
-                {
-                    long l2 = System.currentTimeMillis();
-                    long l3 = l2 - l;
-                    if(l3 > 2000L)
-                    {
-                        field_6038_a.warning("Can't keep up! Did the system time change, or is the server overloaded?");
-                        l3 = 2000L;
+    public void run() {
+        try {
+           if(this.func_6008_d()) {
+              long var1 = System.currentTimeMillis();
+
+              for(long var3 = 0L; this.field_6025_n; Thread.sleep(1L)) {
+                 long var5 = System.currentTimeMillis();
+                 long var7 = var5 - var1;
+                 if(var7 > 2000L) {
+                    field_6038_a.warning("Can\'t keep up! Did the system time change, or is the server overloaded?");
+                    var7 = 2000L;
+                 }
+
+                 if(var7 < 0L) {
+                    field_6038_a.warning("Time ran backwards! Did the system time change?");
+                    var7 = 0L;
+                 }
+
+                 var3 += var7;
+                 var1 = var5;
+                 if(this.field_6034_e[0].func_22084_q()) {
+                    this.func_6018_h();
+                    var3 = 0L;
+                 } else {
+                    while(var3 > 50L) {
+                       var3 -= 50L;
+                       this.func_6018_h();
                     }
-                    if(l3 < 0L)
-                    {
-                        field_6038_a.warning("Time ran backwards! Did the system time change?");
-                        l3 = 0L;
-                    }
-                    l1 += l3;
-                    l = l2;
-                    if(field_6034_e[0].func_22084_q())
-                    {
-                        func_6018_h();
-                        l1 = 0L;
-                    } else
-                    {
-                        while(l1 > 50L) 
-                        {
-                            l1 -= 50L;
-                            func_6018_h();
-                        }
-                    }
-                    Thread.sleep(1L);
-                }
-            } else
-            {
-                while(field_6025_n) 
-                {
-                    func_6021_b();
-                    try
-                    {
-                        Thread.sleep(10L);
-                    }
-                    catch(InterruptedException interruptedexception)
-                    {
-                        interruptedexception.printStackTrace();
-                    }
-                }
-            }
-        }
-        catch(Throwable throwable1)
-        {
-            throwable1.printStackTrace();
-            field_6038_a.log(Level.SEVERE, "Unexpected exception", throwable1);
-            while(field_6025_n) 
-            {
-                func_6021_b();
-                try
-                {
+                 }
+              }
+           } else {
+              while(this.field_6025_n) {
+                 this.func_6021_b();
+
+                 try {
                     Thread.sleep(10L);
-                }
-                catch(InterruptedException interruptedexception1)
-                {
-                    interruptedexception1.printStackTrace();
-                }
-            }
-            try
-            {
-                func_6013_g();
-                field_6032_g = true;
-            }
-            catch(Throwable throwable2)
-            {
-                throwable2.printStackTrace();
-            }
-            finally
-            {
-                System.exit(0);
-            }
-            break MISSING_BLOCK_LABEL_346;
-        }
-        try
-        {
-            func_6013_g();
-            field_6032_g = true;
-        }
-        catch(Throwable throwable)
-        {
-            throwable.printStackTrace();
-        }
-        finally
-        {
-            System.exit(0);
-        }
-        break MISSING_BLOCK_LABEL_346;
-        Exception exception2;
-        exception2;
-        try
-        {
-            func_6013_g();
-            field_6032_g = true;
-        }
-        catch(Throwable throwable3)
-        {
-            throwable3.printStackTrace();
-        }
-        finally
-        {
-            System.exit(0);
+                 } catch (InterruptedException var57) {
+                    var57.printStackTrace();
+                 }
+              }
+           }
+        } catch (Throwable var58) {
+           var58.printStackTrace();
+           field_6038_a.log(Level.SEVERE, "Unexpected exception", var58);
+
+           while(this.field_6025_n) {
+              this.func_6021_b();
+
+              try {
+                 Thread.sleep(10L);
+              } catch (InterruptedException var56) {
+                 var56.printStackTrace();
+              }
+           }
+        } finally {
+           try {
+              this.func_6013_g();
+              this.field_6032_g = true;
+           } catch (Throwable var54) {
+              var54.printStackTrace();
+           } finally {
+              System.exit(0);
+           }
+
         }
-        throw exception2;
-    }
+
+     }
 
     private void func_6018_h()
     {
diff -r -U 3 minecraft_server\net\minecraft\src\ConvertProgressUpdater.java minecraft_server_patched\net\minecraft\src\ConvertProgressUpdater.java
--- minecraft_server\net\minecraft\src\ConvertProgressUpdater.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\ConvertProgressUpdater.java	Tue May 31 23:39:30 2011
@@ -17,7 +17,7 @@
     public ConvertProgressUpdater(MinecraftServer minecraftserver)
     {
         field_22072_a = minecraftserver;
-        super();
+//        super();
         field_22071_b = System.currentTimeMillis();
     }
 
diff -r -U 3 minecraft_server\net\minecraft\src\EnumArt.java minecraft_server_patched\net\minecraft\src\EnumArt.java
--- minecraft_server\net\minecraft\src\EnumArt.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumArt.java	Tue May 31 23:45:23 2011
@@ -5,9 +5,34 @@
 package net.minecraft.src;
 
 
-public final class EnumArt extends Enum
+public enum EnumArt
 {
-
+    Kebab("Kebab", 0, "Kebab", 16, 16, 0, 0),
+    Aztec("Aztec", 1, "Aztec", 16, 16, 16, 0),
+    Alban("Alban", 2, "Alban", 16, 16, 32, 0),
+    Aztec2("Aztec2", 3, "Aztec2", 16, 16, 48, 0),
+    Bomb("Bomb", 4, "Bomb", 16, 16, 64, 0),
+    Plant("Plant", 5, "Plant", 16, 16, 80, 0),
+    Wasteland("Wasteland", 6, "Wasteland", 16, 16, 96, 0),
+    Pool("Pool", 7, "Pool", 32, 16, 0, 32),
+    Courbet("Courbet", 8, "Courbet", 32, 16, 32, 32),
+    Sea("Sea", 9, "Sea", 32, 16, 64, 32),
+    Sunset("Sunset", 10, "Sunset", 32, 16, 96, 32),
+    Creebet("Creebet", 11, "Creebet", 32, 16, 128, 32),
+    Wanderer("Wanderer", 12, "Wanderer", 16, 32, 0, 64),
+    Graham("Graham", 13, "Graham", 16, 32, 16, 64),
+    Match("Match", 14, "Match", 32, 32, 0, 128),
+    Bust("Bust", 15, "Bust", 32, 32, 32, 128),
+    Stage("Stage", 16, "Stage", 32, 32, 64, 128),
+    Void("Void", 17, "Void", 32, 32, 96, 128),
+    SkullAndRoses("SkullAndRoses", 18, "SkullAndRoses", 32, 32, 128, 128),
+    Fighters("Fighters", 19, "Fighters", 64, 32, 0, 96),
+    Pointer("Pointer", 20, "Pointer", 64, 64, 0, 192),
+    Pigscene("Pigscene", 21, "Pigscene", 64, 64, 64, 192),
+    BurningSkull("BurningSkull", 22, "BurningSkull", 64, 64, 128, 192),
+    Skeleton("Skeleton", 23, "Skeleton", 64, 48, 192, 64),
+    DonkeyKong("DonkeyKong", 24, "DonkeyKong", 64, 48, 192, 112);
+/*
     public static EnumArt[] values()
     {
         return (EnumArt[])F.clone();
@@ -17,17 +42,17 @@
     {
         return (EnumArt)Enum.valueOf(net.minecraft.src.EnumArt.class, s);
     }
-
+*/
     private EnumArt(String s, int i, String s1, int j, int k, int l, int i1)
     {
-        super(s, i);
+//        super(s, i);
         field_857_y = s1;
         field_856_z = j;
         field_869_A = k;
         field_867_B = l;
         field_865_C = i1;
     }
-
+/*
     public static final EnumArt Kebab;
     public static final EnumArt Aztec;
     public static final EnumArt Alban;
@@ -53,14 +78,15 @@
     public static final EnumArt BurningSkull;
     public static final EnumArt Skeleton;
     public static final EnumArt DonkeyKong;
+*/
     public static final int field_27096_z = "SkullAndRoses".length();
     public final String field_857_y;
     public final int field_856_z;
     public final int field_869_A;
     public final int field_867_B;
     public final int field_865_C;
-    private static final EnumArt F[]; /* synthetic field */
-
+//    private static final EnumArt F[]; /* synthetic field */
+/*
     static 
     {
         Kebab = new EnumArt("Kebab", 0, "Kebab", 16, 16, 0, 0);
@@ -94,4 +120,5 @@
             Pointer, Pigscene, BurningSkull, Skeleton, DonkeyKong
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumCreatureType.java minecraft_server_patched\net\minecraft\src\EnumCreatureType.java
--- minecraft_server\net\minecraft\src\EnumCreatureType.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumCreatureType.java	Tue May 31 23:43:58 2011
@@ -8,9 +8,12 @@
 // Referenced classes of package net.minecraft.src:
 //            IMob, Material, EntityAnimal, EntityWaterMob
 
-public final class EnumCreatureType extends Enum
+public enum EnumCreatureType
 {
-
+    monster("monster", 0, net.minecraft.src.IMob.class, 70, Material.field_526_a, false),
+    creature("creature", 1, net.minecraft.src.EntityAnimal.class, 15, Material.field_526_a, true),
+    waterCreature("waterCreature", 2, net.minecraft.src.EntityWaterMob.class, 5, Material.field_521_f, true);
+/*
     public static EnumCreatureType[] values()
     {
         return (EnumCreatureType[])h.clone();
@@ -20,10 +23,10 @@
     {
         return (EnumCreatureType)Enum.valueOf(net.minecraft.src.EnumCreatureType.class, s);
     }
-
+*/
     private EnumCreatureType(String s, int i, Class class1, int j, Material material, boolean flag)
     {
-        super(s, i);
+//        super(s, i);
         field_21109_d = class1;
         field_21108_e = j;
         field_21107_f = material;
@@ -49,16 +52,17 @@
     {
         return field_21106_g;
     }
-
+/*
     public static final EnumCreatureType monster;
     public static final EnumCreatureType creature;
     public static final EnumCreatureType waterCreature;
+*/
     private final Class field_21109_d;
     private final int field_21108_e;
     private final Material field_21107_f;
     private final boolean field_21106_g;
-    private static final EnumCreatureType h[]; /* synthetic field */
-
+//    private static final EnumCreatureType h[]; /* synthetic field */
+/*
     static 
     {
         monster = new EnumCreatureType("monster", 0, net.minecraft.src.IMob.class, 70, Material.field_526_a, false);
@@ -68,4 +72,5 @@
             monster, creature, waterCreature
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumMobType.java minecraft_server_patched\net\minecraft\src\EnumMobType.java
--- minecraft_server\net\minecraft\src\EnumMobType.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumMobType.java	Tue May 31 23:42:53 2011
@@ -5,9 +5,12 @@
 package net.minecraft.src;
 
 
-public final class EnumMobType extends Enum
+public enum EnumMobType
 {
-
+    everything,
+    mobs,
+    players;
+/*
     public static EnumMobType[] values()
     {
         return (EnumMobType[])d.clone();
@@ -27,7 +30,7 @@
     public static final EnumMobType mobs;
     public static final EnumMobType players;
     private static final EnumMobType d[]; /* synthetic field */
-
+/*
     static 
     {
         everything = new EnumMobType("everything", 0);
@@ -37,4 +40,5 @@
             everything, mobs, players
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumMovingObjectType.java minecraft_server_patched\net\minecraft\src\EnumMovingObjectType.java
--- minecraft_server\net\minecraft\src\EnumMovingObjectType.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumMovingObjectType.java	Tue May 31 23:42:26 2011
@@ -5,9 +5,11 @@
 package net.minecraft.src;
 
 
-public final class EnumMovingObjectType extends Enum
+public enum EnumMovingObjectType
 {
-
+    TILE,
+    ENTITY;
+/*
     public static EnumMovingObjectType[] values()
     {
         return (EnumMovingObjectType[])c.clone();
@@ -26,7 +28,7 @@
     public static final EnumMovingObjectType TILE;
     public static final EnumMovingObjectType ENTITY;
     private static final EnumMovingObjectType c[]; /* synthetic field */
-
+/*
     static 
     {
         TILE = new EnumMovingObjectType("TILE", 0);
@@ -35,4 +37,5 @@
             TILE, ENTITY
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumSkyBlock.java minecraft_server_patched\net\minecraft\src\EnumSkyBlock.java
--- minecraft_server\net\minecraft\src\EnumSkyBlock.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumSkyBlock.java	Tue May 31 23:42:00 2011
@@ -5,9 +5,11 @@
 package net.minecraft.src;
 
 
-public final class EnumSkyBlock extends Enum
+public enum EnumSkyBlock
 {
-
+    Sky("Sky", 0, 15),
+    Block("Block", 1, 0);
+/*
     public static EnumSkyBlock[] values()
     {
         return (EnumSkyBlock[])d.clone();
@@ -17,18 +19,19 @@
     {
         return (EnumSkyBlock)Enum.valueOf(net.minecraft.src.EnumSkyBlock.class, s);
     }
-
+*/
     private EnumSkyBlock(String s, int i, int j)
     {
-        super(s, i);
+//        super(s, i);
         field_984_c = j;
     }
-
+/*
     public static final EnumSkyBlock Sky;
     public static final EnumSkyBlock Block;
+*/
     public final int field_984_c;
-    private static final EnumSkyBlock d[]; /* synthetic field */
-
+//    private static final EnumSkyBlock d[]; /* synthetic field */
+/*
     static 
     {
         Sky = new EnumSkyBlock("Sky", 0, 15);
@@ -37,4 +40,5 @@
             Sky, Block
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumStatus.java minecraft_server_patched\net\minecraft\src\EnumStatus.java
--- minecraft_server\net\minecraft\src\EnumStatus.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumStatus.java	Tue May 31 23:41:16 2011
@@ -5,9 +5,14 @@
 package net.minecraft.src;
 
 
-public final class EnumStatus extends Enum
+public enum EnumStatus
 {
-
+    OK,
+    NOT_POSSIBLE_HERE,
+    NOT_POSSIBLE_NOW,
+    TOO_FAR_AWAY,
+    OTHER_PROBLEM;
+/*
     public static EnumStatus[] values()
     {
         return (EnumStatus[])f.clone();
@@ -29,7 +34,7 @@
     public static final EnumStatus TOO_FAR_AWAY;
     public static final EnumStatus OTHER_PROBLEM;
     private static final EnumStatus f[]; /* synthetic field */
-
+/*
     static 
     {
         OK = new EnumStatus("OK", 0);
@@ -41,4 +46,5 @@
             OK, NOT_POSSIBLE_HERE, NOT_POSSIBLE_NOW, TOO_FAR_AWAY, OTHER_PROBLEM
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\EnumToolMaterial.java minecraft_server_patched\net\minecraft\src\EnumToolMaterial.java
--- minecraft_server\net\minecraft\src\EnumToolMaterial.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\EnumToolMaterial.java	Tue May 31 23:40:38 2011
@@ -5,9 +5,14 @@
 package net.minecraft.src;
 
 
-public final class EnumToolMaterial extends Enum
+public enum EnumToolMaterial
 {
-
+    WOOD("WOOD", 0, 0, 59, 2.0F, 0),
+    STONE("STONE", 1, 1, 131, 4F, 1),
+    IRON("IRON", 2, 2, 250, 6F, 2),
+    EMERALD("EMERALD", 3, 3, 1561, 8F, 3),
+    GOLD("GOLD", 4, 0, 32, 12F, 0);
+/*
     public static EnumToolMaterial[] values()
     {
         return (EnumToolMaterial[])j.clone();
@@ -17,10 +22,10 @@
     {
         return (EnumToolMaterial)Enum.valueOf(net.minecraft.src.EnumToolMaterial.class, s);
     }
-
+*/
     private EnumToolMaterial(String s, int i, int k, int l, float f, int i1)
     {
-        super(s, i);
+//        super(s, i);
         field_21186_f = k;
         field_21185_g = l;
         field_21184_h = f;
@@ -46,18 +51,19 @@
     {
         return field_21186_f;
     }
-
+/*
     public static final EnumToolMaterial WOOD;
     public static final EnumToolMaterial STONE;
     public static final EnumToolMaterial IRON;
     public static final EnumToolMaterial EMERALD;
     public static final EnumToolMaterial GOLD;
+*/
     private final int field_21186_f;
     private final int field_21185_g;
     private final float field_21184_h;
     private final int field_21183_i;
-    private static final EnumToolMaterial j[]; /* synthetic field */
-
+//    private static final EnumToolMaterial j[]; /* synthetic field */
+/*
     static 
     {
         WOOD = new EnumToolMaterial("WOOD", 0, 0, 59, 2.0F, 0);
@@ -69,4 +75,5 @@
             WOOD, STONE, IRON, EMERALD, GOLD
         });
     }
+*/
 }
diff -r -U 3 minecraft_server\net\minecraft\src\GuiLogFormatter.java minecraft_server_patched\net\minecraft\src\GuiLogFormatter.java
--- minecraft_server\net\minecraft\src\GuiLogFormatter.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\GuiLogFormatter.java	Tue May 31 23:39:07 2011
@@ -17,7 +17,7 @@
     GuiLogFormatter(GuiLogOutputHandler guilogoutputhandler)
     {
         field_894_a = guilogoutputhandler;
-        super();
+//        super();
     }
 
     public String format(LogRecord logrecord)
diff -r -U 3 minecraft_server\net\minecraft\src\GuiStatsListener.java minecraft_server_patched\net\minecraft\src\GuiStatsListener.java
--- minecraft_server\net\minecraft\src\GuiStatsListener.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\GuiStatsListener.java	Tue May 31 23:39:02 2011
@@ -17,7 +17,7 @@
     GuiStatsListener(GuiStatsComponent guistatscomponent)
     {
         field_527_a = guistatscomponent;
-        super();
+//        super();
     }
 
     public void actionPerformed(ActionEvent actionevent)
diff -r -U 3 minecraft_server\net\minecraft\src\MapCoord.java minecraft_server_patched\net\minecraft\src\MapCoord.java
--- minecraft_server\net\minecraft\src\MapCoord.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\MapCoord.java	Tue May 31 23:38:52 2011
@@ -14,7 +14,7 @@
     public MapCoord(MapData mapdata, byte byte0, byte byte1, byte byte2, byte byte3)
     {
         field_28203_e = mapdata;
-        super();
+//        super();
         field_28202_a = byte0;
         field_28201_b = byte1;
         field_28205_c = byte2;
diff -r -U 3 minecraft_server\net\minecraft\src\MapGenCaves.java minecraft_server_patched\net\minecraft\src\MapGenCaves.java
--- minecraft_server\net\minecraft\src\MapGenCaves.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\MapGenCaves.java	Tue May 31 23:38:45 2011
@@ -120,9 +120,9 @@
                 i2 = 16;
             }
             boolean flag2 = false;
-            for(int j2 = d8; !flag2 && j2 < k1; j2++)
+            for(int j2 = (int) d8; !flag2 && j2 < k1; j2++)
             {
-                for(int l2 = d10; !flag2 && l2 < i2; l2++)
+                for(int l2 = (int) d10; !flag2 && l2 < i2; l2++)
                 {
                     for(int i3 = l1 + 1; !flag2 && i3 >= d9 - 1; i3--)
                     {
@@ -137,7 +137,7 @@
                         }
                         if(i3 != d9 - 1 && j2 != d8 && j2 != k1 - 1 && l2 != d10 && l2 != i2 - 1)
                         {
-                            i3 = d9;
+                            i3 = (int) d9;
                         }
                     }
 
@@ -149,11 +149,11 @@
             {
                 continue;
             }
-            for(int k2 = d8; k2 < k1; k2++)
+            for(int k2 = (int) d8; k2 < k1; k2++)
             {
                 double d12 = (((double)(k2 + i * 16) + 0.5D) - d) / d6;
 label0:
-                for(int k3 = d10; k3 < i2; k3++)
+                for(int k3 = (int) d10; k3 < i2; k3++)
                 {
                     double d13 = (((double)(k3 + j * 16) + 0.5D) - d2) / d6;
                     int l3 = (k2 * 16 + k3) * 128 + l1;
diff -r -U 3 minecraft_server\net\minecraft\src\MapGenCavesHell.java minecraft_server_patched\net\minecraft\src\MapGenCavesHell.java
--- minecraft_server\net\minecraft\src\MapGenCavesHell.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\MapGenCavesHell.java	Tue May 31 23:38:47 2011
@@ -120,9 +120,9 @@
                 i2 = 16;
             }
             boolean flag2 = false;
-            for(int j2 = d8; !flag2 && j2 < k1; j2++)
+            for(int j2 = (int) d8; !flag2 && j2 < k1; j2++)
             {
-                for(int l2 = d10; !flag2 && l2 < i2; l2++)
+                for(int l2 = (int) d10; !flag2 && l2 < i2; l2++)
                 {
                     for(int i3 = l1 + 1; !flag2 && i3 >= d9 - 1; i3--)
                     {
@@ -137,7 +137,7 @@
                         }
                         if(i3 != d9 - 1 && j2 != d8 && j2 != k1 - 1 && l2 != d10 && l2 != i2 - 1)
                         {
-                            i3 = d9;
+                            i3 = (int) d9;
                         }
                     }
 
@@ -149,10 +149,10 @@
             {
                 continue;
             }
-            for(int k2 = d8; k2 < k1; k2++)
+            for(int k2 = (int) d8; k2 < k1; k2++)
             {
                 double d12 = (((double)(k2 + i * 16) + 0.5D) - d) / d6;
-                for(int k3 = d10; k3 < i2; k3++)
+                for(int k3 = (int) d10; k3 < i2; k3++)
                 {
                     double d13 = (((double)(k3 + j * 16) + 0.5D) - d2) / d6;
                     int l3 = (k2 * 16 + k3) * 128 + l1;
diff -r -U 3 minecraft_server\net\minecraft\src\MapInfo.java minecraft_server_patched\net\minecraft\src\MapInfo.java
--- minecraft_server\net\minecraft\src\MapInfo.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\MapInfo.java	Tue May 31 23:38:06 2011
@@ -15,7 +15,7 @@
     public MapInfo(MapData mapdata, EntityPlayer entityplayer)
     {
         field_28124_d = mapdata;
-        super();
+//        super();
         field_28119_b = new int[128];
         field_28125_c = new int[128];
         field_28123_e = 0;
diff -r -U 3 minecraft_server\net\minecraft\src\NetworkAcceptThread.java minecraft_server_patched\net\minecraft\src\NetworkAcceptThread.java
--- minecraft_server\net\minecraft\src\NetworkAcceptThread.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\NetworkAcceptThread.java	Tue May 31 23:37:13 2011
@@ -17,9 +17,9 @@
 
     NetworkAcceptThread(NetworkListenThread networklistenthread, String s, MinecraftServer minecraftserver)
     {
+        super(s);
         field_985_b = networklistenthread;
         field_986_a = minecraftserver;
-        super(s);
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\NetworkMasterThread.java minecraft_server_patched\net\minecraft\src\NetworkMasterThread.java
--- minecraft_server\net\minecraft\src\NetworkMasterThread.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\NetworkMasterThread.java	Tue May 31 23:37:07 2011
@@ -14,7 +14,7 @@
     NetworkMasterThread(NetworkManager networkmanager)
     {
         field_829_a = networkmanager;
-        super();
+//        super();
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\NetworkReaderThread.java minecraft_server_patched\net\minecraft\src\NetworkReaderThread.java
--- minecraft_server\net\minecraft\src\NetworkReaderThread.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\NetworkReaderThread.java	Tue May 31 23:37:01 2011
@@ -13,8 +13,8 @@
 
     NetworkReaderThread(NetworkManager networkmanager, String s)
     {
-        field_827_a = networkmanager;
         super(s);
+        field_827_a = networkmanager;
     }
 
     public void run()
@@ -23,6 +23,8 @@
         {
             NetworkManager.field_1052_b++;
         }
+        try
+        {
         while(NetworkManager.func_743_a(field_827_a) && !NetworkManager.func_740_b(field_827_a)) 
         {
             while(NetworkManager.func_751_c(field_827_a)) ;
@@ -32,18 +34,14 @@
             }
             catch(InterruptedException interruptedexception) { }
         }
-        synchronized(NetworkManager.field_1053_a)
-        {
-            NetworkManager.field_1052_b--;
         }
-        break MISSING_BLOCK_LABEL_131;
-        Exception exception2;
-        exception2;
+        finally
+        {
         synchronized(NetworkManager.field_1053_a)
         {
             NetworkManager.field_1052_b--;
         }
-        throw exception2;
+        }
     }
 
     final NetworkManager field_827_a; /* synthetic field */
diff -r -U 3 minecraft_server\net\minecraft\src\NetworkWriterThread.java minecraft_server_patched\net\minecraft\src\NetworkWriterThread.java
--- minecraft_server\net\minecraft\src\NetworkWriterThread.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\NetworkWriterThread.java	Tue May 31 23:36:35 2011
@@ -15,8 +15,8 @@
 
     NetworkWriterThread(NetworkManager networkmanager, String s)
     {
-        field_826_a = networkmanager;
         super(s);
+        field_826_a = networkmanager;
     }
 
     public void run()
@@ -25,6 +25,8 @@
         {
             NetworkManager.field_1051_c++;
         }
+        try
+        {
         do
         {
             if(!NetworkManager.func_743_a(field_826_a))
@@ -53,18 +55,14 @@
                 ioexception.printStackTrace();
             }
         } while(true);
-        synchronized(NetworkManager.field_1053_a)
-        {
-            NetworkManager.field_1051_c--;
         }
-        break MISSING_BLOCK_LABEL_167;
-        Exception exception2;
-        exception2;
+        finally
+        {
         synchronized(NetworkManager.field_1053_a)
         {
             NetworkManager.field_1051_c--;
         }
-        throw exception2;
+        }
     }
 
     final NetworkManager field_826_a; /* synthetic field */
diff -r -U 3 minecraft_server\net\minecraft\src\PlayerInstance.java minecraft_server_patched\net\minecraft\src\PlayerInstance.java
--- minecraft_server\net\minecraft\src\PlayerInstance.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\PlayerInstance.java	Tue May 31 23:35:59 2011
@@ -19,7 +19,7 @@
     public PlayerInstance(PlayerManager playermanager, int i, int j)
     {
         field_1073_a = playermanager;
-        super();
+//        super();
         field_1072_b = new ArrayList();
         field_1068_f = new short[10];
         field_1067_g = 0;
diff -r -U 3 minecraft_server\net\minecraft\src\RailLogic.java minecraft_server_patched\net\minecraft\src\RailLogic.java
--- minecraft_server\net\minecraft\src\RailLogic.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\RailLogic.java	Tue May 31 23:35:54 2011
@@ -16,7 +16,7 @@
     public RailLogic(BlockRail blockrail, World world, int i, int j, int k)
     {
         field_888_a = blockrail;
-        super();
+//        super();
         field_889_g = new ArrayList();
         field_887_b = world;
         field_893_c = i;
diff -r -U 3 minecraft_server\net\minecraft\src\RecipeSorter.java minecraft_server_patched\net\minecraft\src\RecipeSorter.java
--- minecraft_server\net\minecraft\src\RecipeSorter.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\RecipeSorter.java	Tue May 31 23:35:46 2011
@@ -16,7 +16,7 @@
     RecipeSorter(CraftingManager craftingmanager)
     {
         field_20108_a = craftingmanager;
-        super();
+//        super();
     }
 
     public int func_20107_a(IRecipe irecipe, IRecipe irecipe1)
diff -r -U 3 minecraft_server\net\minecraft\src\RegionFileChunkBuffer.java minecraft_server_patched\net\minecraft\src\RegionFileChunkBuffer.java
--- minecraft_server\net\minecraft\src\RegionFileChunkBuffer.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\RegionFileChunkBuffer.java	Tue May 31 23:35:40 2011
@@ -14,8 +14,8 @@
 
     public RegionFileChunkBuffer(RegionFile regionfile, int i, int j)
     {
-        field_22157_a = regionfile;
         super(8096);
+        field_22157_a = regionfile;
         field_22156_b = i;
         field_22158_c = j;
     }
diff -r -U 3 minecraft_server\net\minecraft\src\ServerGuiCommandListener.java minecraft_server_patched\net\minecraft\src\ServerGuiCommandListener.java
--- minecraft_server\net\minecraft\src\ServerGuiCommandListener.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\ServerGuiCommandListener.java	Tue May 31 23:35:33 2011
@@ -20,7 +20,7 @@
     {
         field_992_b = servergui;
         field_993_a = jtextfield;
-        super();
+//        super();
     }
 
     public void actionPerformed(ActionEvent actionevent)
diff -r -U 3 minecraft_server\net\minecraft\src\ServerGuiFocusAdapter.java minecraft_server_patched\net\minecraft\src\ServerGuiFocusAdapter.java
--- minecraft_server\net\minecraft\src\ServerGuiFocusAdapter.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\ServerGuiFocusAdapter.java	Tue May 31 23:35:28 2011
@@ -16,7 +16,7 @@
     ServerGuiFocusAdapter(ServerGUI servergui)
     {
         field_987_a = servergui;
-        super();
+//        super();
     }
 
     public void focusGained(FocusEvent focusevent)
diff -r -U 3 minecraft_server\net\minecraft\src\ServerWindowAdapter.java minecraft_server_patched\net\minecraft\src\ServerWindowAdapter.java
--- minecraft_server\net\minecraft\src\ServerWindowAdapter.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\ServerWindowAdapter.java	Tue May 31 23:35:23 2011
@@ -14,7 +14,7 @@
     ServerWindowAdapter(MinecraftServer minecraftserver)
     {
         field_997_a = minecraftserver;
-        super();
+//        super();
     }
 
     public void windowClosing(WindowEvent windowevent)
diff -r -U 3 minecraft_server\net\minecraft\src\SlotArmor.java minecraft_server_patched\net\minecraft\src\SlotArmor.java
--- minecraft_server\net\minecraft\src\SlotArmor.java	Tue May 31 23:28:48 2011
+++ minecraft_server_patched\net\minecraft\src\SlotArmor.java	Tue May 31 23:35:17 2011
@@ -14,9 +14,9 @@
 
     SlotArmor(ContainerPlayer containerplayer, IInventory iinventory, int i, int j, int k, int l)
     {
+        super(iinventory, i, j, k);
         field_20101_b = containerplayer;
         field_20102_a = l;
-        super(iinventory, i, j, k);
     }
 
     public int func_20093_a()
diff -r -U 3 minecraft_server\net\minecraft\src\SpawnerAnimals.java minecraft_server_patched\net\minecraft\src\SpawnerAnimals.java
--- minecraft_server\net\minecraft\src\SpawnerAnimals.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\SpawnerAnimals.java	Tue May 31 23:37:57 2011
@@ -29,176 +29,147 @@
         return new ChunkPosition(k, l, i1);
     }
 
-    public static final int func_4111_a(World world, boolean flag, boolean flag1)
+    public static final int func_4111_a(World var0, boolean var1, boolean var2)
     {
-        int j;
-        ChunkCoordinates chunkcoordinates;
-        EnumCreatureType aenumcreaturetype[];
-        int i1;
-        int j1;
-        if(!flag && !flag1)
+        if(!var1 && !var2)
         {
             return 0;
         }
-        field_4311_a.clear();
-        for(int i = 0; i < world.field_805_k.size(); i++)
+        else
         {
-            EntityPlayer entityplayer = (EntityPlayer)world.field_805_k.get(i);
-            int k = MathHelper.func_584_b(entityplayer.field_322_l / 16D);
-            int l = MathHelper.func_584_b(entityplayer.field_320_n / 16D);
-            byte byte0 = 8;
-            for(int k1 = -byte0; k1 <= byte0; k1++)
+            field_4311_a.clear();
+
+            int var3;
+            int var6;
+            for(var3 = 0; var3 < var0.field_805_k.size(); ++var3)
             {
-                for(int l1 = -byte0; l1 <= byte0; l1++)
+                EntityPlayer var4 = (EntityPlayer)var0.field_805_k.get(var3);
+                int var5 = MathHelper.func_584_b(var4.field_322_l / 16.0D);
+                var6 = MathHelper.func_584_b(var4.field_320_n / 16.0D);
+                byte var7 = 8;
+
+                for(int var8 = -var7; var8 <= var7; ++var8)
                 {
-                    field_4311_a.add(new ChunkCoordIntPair(k1 + k, l1 + l));
+                    for(int var9 = -var7; var9 <= var7; ++var9)
+                    {
+                        field_4311_a.add(new ChunkCoordIntPair(var8 + var5, var9 + var6));
+                    }
                 }
-
             }
 
-        }
+            var3 = 0;
+            ChunkCoordinates var35 = var0.func_22078_l();
+            EnumCreatureType[] var36 = EnumCreatureType.values();
+            var6 = var36.length;
 
-        j = 0;
-        chunkcoordinates = world.func_22078_l();
-        aenumcreaturetype = EnumCreatureType.values();
-        i1 = aenumcreaturetype.length;
-        j1 = 0;
-_L10:
-        if(j1 >= i1) goto _L2; else goto _L1
-_L1:
-        EnumCreatureType enumcreaturetype;
-        Iterator iterator;
-        enumcreaturetype = aenumcreaturetype[j1];
-        if(enumcreaturetype.func_21103_d() && !flag1 || !enumcreaturetype.func_21103_d() && !flag || world.func_487_a(enumcreaturetype.func_21105_a()) > (enumcreaturetype.func_21104_b() * field_4311_a.size()) / 256)
-        {
-            continue; /* Loop/switch isn't completed */
-        }
-        iterator = field_4311_a.iterator();
-_L4:
-        SpawnListEntry spawnlistentry1;
-        int k2;
-        int l2;
-        int i3;
-        int j3;
-        int k3;
-        do
-        {
-            ChunkCoordIntPair chunkcoordintpair;
-            List list;
-            do
+            for(int var37 = 0; var37 < var6; ++var37)
             {
-                if(!iterator.hasNext())
+                EnumCreatureType var38 = var36[var37];
+                if((!var38.func_21103_d() || var2) && (var38.func_21103_d() || var1) && var0.func_487_a(var38.func_21105_a()) <= var38.func_21104_b() * field_4311_a.size() / 256)
                 {
-                    continue; /* Loop/switch isn't completed */
+                    Iterator var39 = field_4311_a.iterator();
+
+                    label113:
+                    while(var39.hasNext())
+                    {
+                        ChunkCoordIntPair var10 = (ChunkCoordIntPair)var39.next();
+                        BiomeGenBase var11 = var0.func_4077_a().func_4066_a(var10);
+                        List var12 = var11.func_25055_a(var38);
+                        if(var12 != null && !var12.isEmpty())
+                        {
+                            int var13 = 0;
+
+                            SpawnListEntry var15;
+                            for(Iterator var14 = var12.iterator(); var14.hasNext(); var13 += var15.field_25144_b)
+                            {
+                                var15 = (SpawnListEntry)var14.next();
+                            }
+
+                            int var40 = var0.field_803_m.nextInt(var13);
+                            var15 = (SpawnListEntry)var12.get(0);
+                            Iterator var16 = var12.iterator();
+
+                            while(var16.hasNext())
+                            {
+                                SpawnListEntry var17 = (SpawnListEntry)var16.next();
+                                var40 -= var17.field_25144_b;
+                                if(var40 < 0)
+                                {
+                                    var15 = var17;
+                                    break;
+                                }
+                            }
+
+                            ChunkPosition var41 = func_4112_a(var0, var10.field_152_a * 16, var10.field_151_b * 16);
+                            int var42 = var41.field_846_a;
+                            int var18 = var41.field_845_b;
+                            int var19 = var41.field_847_c;
+                            if(!var0.func_445_d(var42, var18, var19) && var0.func_443_c(var42, var18, var19) == var38.func_21102_c())
+                            {
+                                int var20 = 0;
+
+                                for(int var21 = 0; var21 < 3; ++var21)
+                                {
+                                    int var22 = var42;
+                                    int var23 = var18;
+                                    int var24 = var19;
+                                    byte var25 = 6;
+
+                                    for(int var26 = 0; var26 < 4; ++var26)
+                                    {
+                                        var22 += var0.field_803_m.nextInt(var25) - var0.field_803_m.nextInt(var25);
+                                        var23 += var0.field_803_m.nextInt(1) - var0.field_803_m.nextInt(1);
+                                        var24 += var0.field_803_m.nextInt(var25) - var0.field_803_m.nextInt(var25);
+                                        if(func_21167_a(var38, var0, var22, var23, var24))
+                                        {
+                                            float var27 = (float)var22 + 0.5F;
+                                            float var28 = (float)var23;
+                                            float var29 = (float)var24 + 0.5F;
+                                            if(var0.func_456_a((double)var27, (double)var28, (double)var29, 24.0D) == null)
+                                            {
+                                                float var30 = var27 - (float)var35.field_22216_a;
+                                                float var31 = var28 - (float)var35.field_529_a;
+                                                float var32 = var29 - (float)var35.field_528_b;
+                                                float var33 = var30 * var30 + var31 * var31 + var32 * var32;
+                                                if(var33 >= 576.0F)
+                                                {
+                                                    EntityLiving var43;
+                                                    try
+                                                    {
+                                                        var43 = (EntityLiving)var15.field_25145_a.getConstructor(new Class[]{World.class}).newInstance(new Object[]{var0});
+                                                    }
+                                                    catch (Exception var34)
+                                                    {
+                                                        var34.printStackTrace();
+                                                        return var3;
+                                                    }
+
+                                                    var43.func_107_c((double)var27, (double)var28, (double)var29, var0.field_803_m.nextFloat() * 360.0F, 0.0F);
+                                                    if(var43.func_155_a())
+                                                    {
+                                                        ++var20;
+                                                        var0.func_526_a(var43);
+                                                        func_21166_a(var43, var0, var27, var28, var29);
+                                                        if(var20 >= var43.func_4045_i())
+                                                        {
+                                                            continue label113;
+                                                        }
+                                                    }
+
+                                                    var3 += var20;
+                                                }
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                    }
                 }
-                chunkcoordintpair = (ChunkCoordIntPair)iterator.next();
-                BiomeGenBase biomegenbase = world.func_4077_a().func_4066_a(chunkcoordintpair);
-                list = biomegenbase.func_25055_a(enumcreaturetype);
-            } while(list == null || list.isEmpty());
-            int i2 = 0;
-            for(Iterator iterator1 = list.iterator(); iterator1.hasNext();)
-            {
-                SpawnListEntry spawnlistentry = (SpawnListEntry)iterator1.next();
-                i2 += spawnlistentry.field_25144_b;
             }
 
-            int j2 = world.field_803_m.nextInt(i2);
-            spawnlistentry1 = (SpawnListEntry)list.get(0);
-            Object obj = list.iterator();
-            do
-            {
-                if(!((Iterator) (obj)).hasNext())
-                {
-                    break;
-                }
-                SpawnListEntry spawnlistentry2 = (SpawnListEntry)((Iterator) (obj)).next();
-                j2 -= spawnlistentry2.field_25144_b;
-                if(j2 >= 0)
-                {
-                    continue;
-                }
-                spawnlistentry1 = spawnlistentry2;
-                break;
-            } while(true);
-            obj = func_4112_a(world, chunkcoordintpair.field_152_a * 16, chunkcoordintpair.field_151_b * 16);
-            k2 = ((ChunkPosition) (obj)).field_846_a;
-            l2 = ((ChunkPosition) (obj)).field_845_b;
-            i3 = ((ChunkPosition) (obj)).field_847_c;
-        } while(world.func_445_d(k2, l2, i3) || world.func_443_c(k2, l2, i3) != enumcreaturetype.func_21102_c());
-        j3 = 0;
-        k3 = 0;
-_L9:
-        if(k3 >= 3) goto _L4; else goto _L3
-_L3:
-        int l3;
-        int i4;
-        int j4;
-        byte byte1;
-        int k4;
-        l3 = k2;
-        i4 = l2;
-        j4 = i3;
-        byte1 = 6;
-        k4 = 0;
-_L8:
-        if(k4 >= 4) goto _L6; else goto _L5
-_L5:
-        EntityLiving entityliving;
-        l3 += world.field_803_m.nextInt(byte1) - world.field_803_m.nextInt(byte1);
-        i4 += world.field_803_m.nextInt(1) - world.field_803_m.nextInt(1);
-        j4 += world.field_803_m.nextInt(byte1) - world.field_803_m.nextInt(byte1);
-        if(!func_21167_a(enumcreaturetype, world, l3, i4, j4))
-        {
-            continue; /* Loop/switch isn't completed */
-        }
-        float f = (float)l3 + 0.5F;
-        float f1 = i4;
-        float f2 = (float)j4 + 0.5F;
-        if(world.func_456_a(f, f1, f2, 24D) != null)
-        {
-            continue; /* Loop/switch isn't completed */
-        }
-        float f3 = f - (float)chunkcoordinates.field_22216_a;
-        float f4 = f1 - (float)chunkcoordinates.field_529_a;
-        float f5 = f2 - (float)chunkcoordinates.field_528_b;
-        float f6 = f3 * f3 + f4 * f4 + f5 * f5;
-        if(f6 < 576F)
-        {
-            continue; /* Loop/switch isn't completed */
-        }
-        try
-        {
-            entityliving = (EntityLiving)spawnlistentry1.field_25145_a.getConstructor(new Class[] {
-                net.minecraft.src.World.class
-            }).newInstance(new Object[] {
-                world
-            });
-        }
-        catch(Exception exception)
-        {
-            exception.printStackTrace();
-            return j;
-        }
-        entityliving.func_107_c(f, f1, f2, world.field_803_m.nextFloat() * 360F, 0.0F);
-        if(!entityliving.func_155_a())
-        {
-            break; /* Loop/switch isn't completed */
+            return var3;
         }
-        j3++;
-        world.func_526_a(entityliving);
-        func_21166_a(entityliving, world, f, f1, f2);
-        if(j3 < entityliving.func_4045_i()) goto _L7; else goto _L4
-_L7:
-        j += j3;
-        k4++;
-          goto _L8
-_L6:
-        k3++;
-          goto _L9
-        j1++;
-          goto _L10
-_L2:
-        return j;
     }
 
     private static boolean func_21167_a(EnumCreatureType enumcreaturetype, World world, int i, int j, int k)
diff -r -U 3 minecraft_server\net\minecraft\src\ThreadCommandReader.java minecraft_server_patched\net\minecraft\src\ThreadCommandReader.java
--- minecraft_server\net\minecraft\src\ThreadCommandReader.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\ThreadCommandReader.java	Tue May 31 23:35:09 2011
@@ -13,7 +13,7 @@
     public ThreadCommandReader(MinecraftServer minecraftserver)
     {
         field_1032_a = minecraftserver;
-        super();
+//        super();
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\ThreadLoginVerifier.java minecraft_server_patched\net\minecraft\src\ThreadLoginVerifier.java
--- minecraft_server\net\minecraft\src\ThreadLoginVerifier.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\ThreadLoginVerifier.java	Tue May 31 23:35:08 2011
@@ -19,7 +19,7 @@
     {
         field_971_b = netloginhandler;
         field_972_a = packet1login;
-        super();
+//        super();
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\ThreadMonitorConnection.java minecraft_server_patched\net\minecraft\src\ThreadMonitorConnection.java
--- minecraft_server\net\minecraft\src\ThreadMonitorConnection.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\ThreadMonitorConnection.java	Tue May 31 23:35:08 2011
@@ -14,7 +14,7 @@
     ThreadMonitorConnection(NetworkManager networkmanager)
     {
         field_828_a = networkmanager;
-        super();
+//        super();
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\ThreadServerApplication.java minecraft_server_patched\net\minecraft\src\ThreadServerApplication.java
--- minecraft_server\net\minecraft\src\ThreadServerApplication.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\ThreadServerApplication.java	Tue May 31 23:35:08 2011
@@ -11,8 +11,8 @@
 
     public ThreadServerApplication(String s, MinecraftServer minecraftserver)
     {
-        field_1033_a = minecraftserver;
         super(s);
+        field_1033_a = minecraftserver;
     }
 
     public void run()
diff -r -U 3 minecraft_server\net\minecraft\src\ThreadSleepForever.java minecraft_server_patched\net\minecraft\src\ThreadSleepForever.java
--- minecraft_server\net\minecraft\src\ThreadSleepForever.java	Tue May 31 23:28:49 2011
+++ minecraft_server_patched\net\minecraft\src\ThreadSleepForever.java	Tue May 31 23:35:08 2011
@@ -12,7 +12,7 @@
     public ThreadSleepForever(MinecraftServer minecraftserver)
     {
         field_1031_a = minecraftserver;
-        super();
+//        super();
         setDaemon(true);
         start();
     }
diff -r -U 3 minecraft_server\net\minecraft\src\Block.java minecraft_server_patched\net\minecraft\src\Block.java
--- minecraft_server\net\minecraft\src\Block.java	Fri May 27 22:44:39 2011
+++ minecraft_server_patched\net\minecraft\src\Block.java	Fri May 27 22:08:44 2011
@@ -518,12 +518,12 @@
     public static final StepSound field_9023_j;
     public static final StepSound field_9022_k;
     public static final StepSound field_9021_l;
-    public static final Block field_542_n[];
+    public static final Block field_542_n[] = new Block[256];;
     public static final boolean field_541_o[] = new boolean[256];
     public static final boolean field_540_p[] = new boolean[256];
     public static final boolean field_539_q[] = new boolean[256];
     public static final int field_538_r[] = new int[256];
-    public static final boolean field_537_s[];
+    public static final boolean field_537_s[] = new boolean[256];
     public static final int field_536_t[] = new int[256];
     public static final boolean field_28029_t[] = new boolean[256];
     public static final Block field_535_u;
@@ -550,8 +550,8 @@
     public static final Block field_9041_O;
     public static final Block field_9040_P;
     public static final Block field_9039_Q;
-    public static final Block field_9038_R = (new BlockNote(25)).func_237_c(0.8F).func_20037_a("musicBlock").func_28027_k();
-    public static final Block field_9037_S = (new BlockBed(26)).func_237_c(0.2F).func_20037_a("bed").func_27021_h().func_28027_k();
+    public static final Block field_9038_R;
+    public static final Block field_9037_S;
     public static final Block field_9036_T;
     public static final Block field_9034_U;
     public static final Block field_9033_V = null;
@@ -642,6 +642,8 @@
 
     static 
     {
+    	field_9037_S = (new BlockBed(26)).func_237_c(0.2F).func_20037_a("bed").func_27021_h().func_28027_k();
+    	field_9038_R = (new BlockNote(25)).func_237_c(0.8F).func_20037_a("musicBlock").func_28027_k();
         field_551_e = new StepSound("stone", 1.0F, 1.0F);
         field_9028_e = new StepSound("wood", 1.0F, 1.0F);
         field_9027_f = new StepSound("gravel", 1.0F, 1.0F);
@@ -651,8 +653,6 @@
         field_9023_j = new StepSoundStone("stone", 1.0F, 1.0F);
         field_9022_k = new StepSound("cloth", 1.0F, 1.0F);
         field_9021_l = new StepSoundSand("sand", 1.0F, 1.0F);
-        field_542_n = new Block[256];
-        field_537_s = new boolean[256];
         field_535_u = (new BlockStone(1, 1)).func_237_c(1.5F).func_232_b(10F).func_4026_a(field_9025_h).func_20037_a("stone");
         field_534_v = (BlockGrass)(new BlockGrass(2)).func_237_c(0.6F).func_4026_a(field_9026_g).func_20037_a("grass");
         field_533_w = (new BlockDirt(3, 2)).func_237_c(0.5F).func_4026_a(field_9027_f).func_20037_a("dirt");
